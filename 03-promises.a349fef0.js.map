{"mappings":"YA4CA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IApDMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAwBC,GACtBA,EAAMC,iBAYN,IAVA,IAAMC,EAAaL,SAASC,cAAc,uBACpCK,EAAYN,SAASC,cAAc,sBACnCM,EAAcP,SAASC,cAAc,wBAErCO,EAAQC,OAAOJ,EAAWK,OAC1BC,EAAOF,OAAOH,EAAUI,OACxBE,EAASH,OAAOF,EAAYG,OAE5BG,EAAW,GAERC,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAC/B,IAGMC,EAAUzB,EAHCwB,EAAI,EACAN,EAAQM,EAAIH,GAGjCE,EAASG,KAAKD,E,CAGhBtB,QAAQwB,IAAIJ,GACTK,MAAK,SAACC,GACLA,EAAQC,SAAQ,SAAAC,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MAC3B8B,SAASC,OAAOC,QAAQ,uBAAwCC,OAAflC,EAAS,QAAYkC,OAANjC,EAAM,M,OAGzEkC,OAAM,SAACP,GACNA,EAAQC,SAAQ,SAAAC,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MAC3B8B,SAASC,OAAOI,QAAQ,sBAAqCF,OAAflC,EAAS,QAAYkC,OAANjC,EAAM,M,OAIzEa,EAAWK,MAAQ,GACnBJ,EAAUI,MAAQ,GAClBH,EAAYG,MAAQ,E","sources":["src/js/03-promises.js"],"sourcesContent":["\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', createPromises);\n\nfunction createPromises(event) {\n  event.preventDefault();\n\n  const delayInput = document.querySelector('input[name=\"delay\"]');\n  const stepInput = document.querySelector('input[name=\"step\"]');\n  const amountInput = document.querySelector('input[name=\"amount\"]');\n\n  const delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n\n  const promises = [];\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const promiseDelay = delay + i * step;\n\n    const promise = createPromise(position, promiseDelay);\n    promises.push(promise);\n  }\n\n  Promise.all(promises)\n    .then((results) => {\n      results.forEach(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      });\n    })\n    .catch((results) => {\n      results.forEach(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    });\n\n  delayInput.value = '';\n  stepInput.value = '';\n  amountInput.value = '';\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delayInput","stepInput","amountInput","delay1","Number","value","step","amount","promises","i","promise","push","all","then","results","forEach","param","Notiflix","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.a349fef0.js.map"}